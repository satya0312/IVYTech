package com.ninja.qa.testcases;

import java.util.Date;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.chrome.ChromeOptions;
import org.testng.Assert;
import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

public class RegisterPage {
	
	WebDriver driver ;
	
	public String GetDatastamp() {
		Date date =new Date();
		return date.toString().replace(" ","_").replace(":", "_");
	}
	
	@BeforeMethod
	public void Set_UP() {
		ChromeOptions options = new ChromeOptions();
		options.addArguments("--remote-allow-origins=*");
		driver = new ChromeDriver(options);		
		driver.manage().window().maximize();
		driver.get("http://www.tutorialsninja.com/demo/");
		driver.findElement(By.xpath("//span[@class =\"caret\"]")).click();
		driver.findElement(By.linkText("Register")).click();		
	}
	
	@AfterMethod
	public void Tear_Down() {
		driver.quit();
	}
	
	
	@Test(priority =1)
	public void VerifyRegistrationByManditatoryFileds() {		
		driver.findElement(By.id("input-firstname")).sendKeys("satya");
		driver.findElement(By.id("input-lastname")).sendKeys("satyalast");
		driver.findElement(By.id("input-email")).sendKeys("abc"+GetDatastamp()+"@gmail.com");
		driver.findElement(By.id("input-telephone")).sendKeys("123456789");
		driver.findElement(By.id("input-password")).sendKeys("123456");
		driver.findElement(By.id("input-confirm")).sendKeys("123456");
		driver.findElement(By.name("agree")).click();		
		driver.findElement(By.xpath("//input[@type=\"submit\"]")).click();	
		
		
		String ActualMessage =  driver.findElement(By.xpath("//div[@id='content']/h1")).getText();
		
		Assert.assertEquals(ActualMessage, "Your Account Has Been Created!","Account is not created");
	}
	
	@Test(priority =2)
	public void VerifyRegistrationByAllFields() {
		driver.findElement(By.id("input-firstname")).sendKeys("satya");
		driver.findElement(By.id("input-lastname")).sendKeys("satyalast");
		driver.findElement(By.id("input-email")).sendKeys("abc"+GetDatastamp()+"@gmail.com");
		driver.findElement(By.id("input-telephone")).sendKeys("123456789");
		driver.findElement(By.id("input-password")).sendKeys("123456");
		driver.findElement(By.id("input-confirm")).sendKeys("123456");
		driver.findElement(By.xpath("//input[@name='newsletter'][@value='1']")).click();
		driver.findElement(By.name("agree")).click();		
		driver.findElement(By.xpath("//input[@type=\"submit\"]")).click();
		
String ActualMessage =  driver.findElement(By.xpath("//div[@id='content']/h1")).getText();
		
		Assert.assertEquals(ActualMessage, "Your Account Has Been Created!","Account is not created");
	}
	
	@Test(priority =3)
	public void VerifyRegisitritionWithoutDetails() throws InterruptedException {
		driver.findElement(By.xpath("//input[@type=\"submit\"]")).click();
		
		String ActualErrorMessage = driver.findElement(By.xpath("//div[contains(@class,'alert-dismissible')]")).getText();
	//	Assert.assertTrue(ActualErrorMessage.contentEquals(" Warning: You must agree to the Privacy Policy!"),"Not getting error message");
		
		String ActualFirstNameWarning = driver.findElement(By.xpath("//input[@id=\"input-firstname\"]/following-sibling::div")).getText();
		
		String ActualLastNameWarining = driver.findElement(By.xpath("//input[@id=\"input-lastname\"]/following-sibling::div")).getText(); 	
		
		String ActualEmailWarning = driver.findElement(By.xpath("//input[@id='input-email']/following-sibling::div")).getText();
		
		 Thread.sleep(2000);
		 System.out.println(ActualFirstNameWarning);
		Assert.assertEquals(ActualFirstNameWarning.contentEquals("First Name must be between 1 and 32 characters!"),"First nmae field Warning is not displaying properly");
	//	Assert.assertEquals(ActualLastNameWarining.contains("Last Name must be between 1 and 32 characters!"),"Last nmae field Warning is not displaying properly");
		//Assert.assertEquals(ActualEmailWarning.contains("E-Mail Address does not appear to be valid!"),"Email field Warning is not displaying properly");
	}

}
